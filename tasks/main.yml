---

- name: ASSERT | Check vars
  ansible.builtin.assert:
    that:
      - 'redis_maxmemory_policy is none or redis_maxmemory_policy in redis_maxmemory_policy_available'
      - 'redis_maxmemory_samples is none or redis_maxmemory_policy in redis_maxmemory_samples_policies'

- name: APT | Update cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  changed_when: false

- name: APT | Install redis
  ansible.builtin.apt:
    pkg: redis-server
    state: present
    default_release: "{{ redis_apt_target }}"

- name: LINEINFILE | Add include in config file
  ansible.builtin.lineinfile:
    dest: /etc/redis/redis.conf
    line: "include /etc/redis/redis.conf.local"
    insertafter: EOF
  notify: restart redis

- name: REPLACE | Disable config multiline
  ansible.builtin.replace:
    path: /etc/redis/redis.conf
    regexp: '^({{ item }}.*)'
    replace: '# \1'
  loop: ['save', 'client-output-buffer-limit']
  notify: restart redis

- name: TEMPLATE | Deploy Redis config file
  ansible.builtin.template:
    src: etc/redis/redis.conf.local.j2
    dest: /etc/redis/redis.conf.local
    mode: 0640
    owner: redis
    group: redis
  notify: restart redis

- name: LINEINFILE | Manage ulimit
  ansible.builtin.lineinfile:
    line: '{% if redis_ulimit is none %}# ULIMIT=65536{% else %}ULIMIT={{ redis_ulimit }}{% endif %}'
    regexp: '^(#\s)?ULIMIT'
    dest: /etc/default/redis-server
  notify: restart redis
